def map-cell m x
  ; expects MAP and ($x $y) coordinate as args
  ; returns the entry in the map at position ($x $y)
  LD   0 0
  LD   0 1
  CDR      ; MAP is row-major, so lookup $y-th row first
  LDF  elt
  AP   2

  LD   0 1
  CAR
  LDF  elt
  AP   2

  RTN
end
 
def left p

  ; expects ($x $y) coordinate pair as arg
  ; pushes ($x-1 $y)
  LD   0 0
  CAR
  LDC  1
  SUB
  LD   0 0
  CDR
  CONS
  RTN
end
def right p
  ; expects ($x $y) coordinate pair => ($x+1 $y)
  LD   0 0
  CAR
  LDC  1
  ADD
  LD   0 0
  CDR
  CONS
  RTN
end
def up p
  ; expects ($x $y) coordinate pair => ($x $y-1)
  LD   0 0
  CAR
  LD   0 0
  CDR
  LDC  1
  SUB
  CONS
  RTN
end
def down p
  ; expects ($x $y) coordinate pair => ($x $y+1)
  LD   0 0
  CAR
  LD   0 0
  CDR
  LDC  1
  ADD
  CONS
  RTN
end

def advance loc dir
	; moves one step in 'dir' starting from 'loc' and returns the new position
	; seriously why do we not have constants??
	if equal dir 0
		return up loc
	elseif equal dir 1
		return right loc
	elseif equal dir 2
		return down loc
	else
		return left loc
	endif
end

def reverse dir
	; returns the opposite direction to 'dir'
	if equal dir 0
		return 2
	elseif equal dir 1
		return 3
	elseif equal dir 2
		return 0
	else
		return 1
	endif
end

def neighbours loc
	; returns a list of locations up, right, down, and left from loc
	return pair (up loc) (pair (right loc) (pair (down loc) (pair (left loc) 0)))
end

def wall? cell
	return equal cell 0
end

def turn-left dir
	if equal dir 0
		return 3
	else
		return dec dir
	endif
end

def turn-right dir
	if equal dir 3
		return 0
	else
		return inc dir
	endif
end

